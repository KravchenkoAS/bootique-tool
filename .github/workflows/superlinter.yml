# Licensed to ObjectStyle LLC under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ObjectStyle LLC licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: bootique-tool

on: [push, pull_request]

jobs:
  deploy-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v2
        with:
          path: $HOME/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - run: mvn package

      - name: script
        run: chmod +x ./deploy/linux.sh;
            ./deploy/linux.sh;

      - name: before_deploy
        run: chmod +x ./deploy/update-version.sh;
            ./deploy/update-version.sh;

      - name: Upload deb package to Bintray
        uses: bpicode/github-action-upload-bintray@master
#        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: bootique-tool/target/bq-0.100.deb
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
#          gpg_passphrase: ${{ secrets.BINTRAY_GPG_PASSPHRASE }} # Optional, for this to work Bintray requires a GPG public/private keypair configured for the repository owner (individual or organization).
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-deb
          package: bq-deb
          version: 0.100-SNAPSHOT
          upload_path: pool/main/m # Typical for debian repository layout
          publish: 0
          calculate_metadata: true # Schedule metadata calculation after upload
          deb_distribution: wheezy
          deb_component: main
          deb_architecture: amd64

      - name: Upload rpm package to Bintray
        uses: KravchenkoAS/action-upload-rpm-bintray@main
#        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: bootique-tool/target/bq-0.100-1.x86_64.rpm
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-rpm
          package: bq-rpm
          version: 0.100-SNAPSHOT
          upload_path: pool/main/m # Typical for debian repository layout
          publish: 0

  deploy-macos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v2
        with:
          path: $HOME/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - run: mvn package

      - name: script
        run: chmod +x ./deploy/mac.sh;
          ./deploy/mac.sh;

      - name: before_deploy
        run: chmod +x ./deploy/update-mac-version.sh;
          ./deploy/update-mac-version.sh;

      - name: Upload zip package to Bintray
        uses: KravchenkoAS/action-upload-rpm-bintray@main
#        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: bootique-tool/target/bq-0.100-SNAPSHOT.zip
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-mac
          package: bq
          version: 0.100-SNAPSHOT
          upload_path: pool/main/m
          publish: 0

      - name: after_deploy
        continue-on-error: true
        run: chmod +x ./deploy/update-homebrew.sh;
            ./deploy/update-homebrew.sh;

  deploy-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up java 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: init
        shell: pwsh
        run: |
          cinst graalvm-java11 --version=20.2.0
          . "C:\Program Files\GraalVM\graalvm-ce-java11-20.2.0\bin\gu" install native-image
          $env:GRAALVM_HOME="C:\Program Files\GraalVM\graalvm-ce-java11-20.2.0"
          $env:PATH="C:\Program Files\GraalVM\graalvm-ce-java11-20.2.0\bin;$env:PATH"

      - name: Add msbuild to PATH
        uses: microsoft/setup-msbuild@v1.0.2

      - uses: actions/cache@v2
        with:
          path: $HOME/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: script
        shell: pwsh
        run: |
          ls "C:\Program Files (x86)\Microsoft Visual Studio\2019"
          start-process 'C:\Program Files (x86)\Microsoft Visual Studio\2019\BuildTools\VC\Auxiliary\Build\vcvars64.bat'
          javac --version
          mvn package -DskipTests
          cd .\bootique-tool\target\
          . "C:\Program Files\GraalVM\graalvm-ce-java11-20.2.0\bin\native-image" -jar bq.jar --report-unsupported-elements-at-runtime --no-fallback --initialize-at-build-time=io.bootique.tools.shell.command.ShellCommand --initialize-at-build-time=io.bootique.command.Command bq
          cd ..\..
          mvn package -Passembly-win -DskipTests

      - name: before_deploy
        shell: pwsh
        run: |
          cd -Path .\bootique-tool\target\bq-win.portable\bq-win.portable\
          Choco Pack
          Push-AppveyorArtifact ".\bq.portable.kr1.nupkg"

      - run: ls

      - name: Upload zip package to Bintray
        uses: KravchenkoAS/action-upload-rpm-bintray@main
 #        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: ./bq.portable.kr1.nupkg
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-win
          package: bq
          version: 0.100-SNAPSHOT
          upload_path: pool/main/win
          publish: 0

#      - name: after_deploy
#        continue-on-error: true
#        run: |
#            Set-Location -Path .\bootique-tool\target\bq-win.portable\bq-win.portable\
#            choco apikey -k $env:choco_key -source https://push.chocolatey.org/
#            choco push bq.portable.$($ENV:APPVEYOR_REPO_TAG_NAME).nupkg -s https://push.chocolatey.org/