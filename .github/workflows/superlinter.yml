# Licensed to ObjectStyle LLC under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ObjectStyle LLC licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: bootique-tool

on: [push, pull_request]

jobs:
  deploy-linux:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v2
        with:
          path: $HOME/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - run: mvn package

      - name: script
        run: chmod +x ./deploy/linux.sh;
            ./deploy/linux.sh;

      - name: before_deploy
        run: chmod +x ./deploy/update-version.sh;
            ./deploy/update-version.sh;

      - name: Set Project Version
        run: |
          NAME=$(basename $(find ./bootique-tool/target -type f -name 'bq-*.jar'))
          echo "VERSION=$(echo "${NAME%.*}" | cut -d'-' -f 2)" >> $GITHUB_ENV

      - name: Upload deb package to Bintray
        uses: bpicode/github-action-upload-bintray@master
#        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: bootique-tool/target/bq-${{env.VERSION}}.deb
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
#          gpg_passphrase: ${{ secrets.BINTRAY_GPG_PASSPHRASE }} # Optional, for this to work Bintray requires a GPG public/private keypair configured for the repository owner (individual or organization).
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-deb
          package: bq-deb
          version: ${{env.VERSION}}-SNAPSHOT
          upload_path: pool/main/m # Typical for debian repository layout
          publish: 0
          calculate_metadata: true # Schedule metadata calculation after upload
          deb_distribution: wheezy
          deb_component: main
          deb_architecture: amd64

      - name: Upload rpm package to Bintray
        uses: KravchenkoAS/action-upload-rpm-bintray@main
#        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: bootique-tool/target/bq-${{env.VERSION}}-1.x86_64.rpm
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-rpm
          package: bq-rpm
          version: ${{env.VERSION}}-SNAPSHOT
          upload_path: pool/main/m # Typical for debian repository layout
          publish: 0

  deploy-macos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - uses: actions/cache@v2
        with:
          path: $HOME/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - run: mvn package

      - name: script
        run: chmod +x ./deploy/mac.sh;
          ./deploy/mac.sh;

      - name: before_deploy
        run: chmod +x ./deploy/update-mac-version.sh;
          ./deploy/update-mac-version.sh;

      - name: Set Project Version
        run: |
          NAME=$(basename $(find ./bootique-tool/target -type f -name 'bq-*.jar'))
          echo "VERSION=$(echo "${NAME%.*}" | cut -d'-' -f 2)" >> $GITHUB_ENV

      - name: Upload zip package to Bintray
        uses: KravchenkoAS/action-upload-rpm-bintray@main
#        if: ${{ github.ref == 'refs/heads/master' }}
        with:
          file: bootique-tool/target/bq-${{env.VERSION}}-SNAPSHOT.zip
          api_user: kravchenko
          api_key: ${{ secrets.BINTRAY_API_KEY }}
          repository_user: kravchenkoas
          repository: bq-tool-my-repo-mac
          package: bq
          version: ${{env.VERSION}}-SNAPSHOT
          upload_path: pool/main/m
          publish: 0

      - name: after_deploy
        continue-on-error: true
        run: chmod +x ./deploy/update-homebrew.sh;
            ./deploy/update-homebrew.sh;

  deploy-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Set up java 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: 'Install GraalVM'
        run: |
          choco install windows-sdk-7.1
          Invoke-RestMethod -Uri https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-20.1.0/graalvm-ce-java8-windows-amd64-20.1.0.zip -OutFile 'graal.zip'
          Expand-Archive -path 'graal.zip' -destinationpath '.'
          graalvm-ce-java8-20.1.0\bin\gu.cmd install native-image
#      - name: 'Set up Visual C Build Tools Workload for Visual Studio 2017 Build Tools'
#        run: |
#          choco install visualstudio2017-workload-vctools
      - name: 'Maven Package'
        shell: cmd
        run: mvn package -DskipTests
      - name: 'Build Native Image'
        shell: C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd /D /E:ON /V:OFF /S /C "CALL "{0}""
        env:
          JAVA_HOME: D:\a\my-bq-tool\my-bq-tool\graalvm-ce-java8-20.1.0
        run: |
          cd .\bootique-tool\target\
          %JAVA_HOME%\bin\native-image -jar bq.jar --report-unsupported-elements-at-runtime --no-server --no-fallback --initialize-at-build-time=io.bootique.tools.shell.command.ShellCommand --initialize-at-build-time=io.bootique.command.Command bq
          cd ..\..

      - name: before_deploy
        shell: pwsh
        run: |
          mvn package -Passembly-win -DskipTests
          Set-Location -Path .\bootique-tool\target\bq-win.portable\bq-win.portable\
          Choco Pack
          echo $env:APPVEYOR_REPO_TAG_NAME
          set $env:NAME=$(basename $(find ./bootique-tool/target -type f -name 'bq-*.jar'))
          echo "VERSION=$(echo "${$env:NAME%.*}" | cut -d'-' -f 2)" >> $GITHUB_ENV
#          Push-AppveyorArtifact ".\bq.portable.$env:APPVEYOR_REPO_TAG_NAME.nupkg"

      - name: Print env
        shell: pwsh
        run: |
          echo ${{env.VERSION}}
          echo ${{env.APPVEYOR_REPO_TAG_NAME}}

      - name: Upload nupkg package to Bintray
#        if: ${{ github.ref == 'refs/heads/master' }}
        shell: cmd
        env:
          FILE_PATH: bq.portable.${{env.VERSION}}-SNAPSHOT.nupkg
          API_USER: kravchenko
          REPOSITORY_USER: kravchenkoas
          REPOSITORY: bq-tool-my-repo-mac
          PACKAGE: bq
          VERSION: ${{env.VERSION}}-SNAPSHOT
          UPLOAD_PATH: pool/main/win
          PUBLISH: 0
        run: |
          cd .\bootique-tool\target\bq-win.portable\bq-win.portable\
          curl --silent --show-error --fail --location --request PUT --upload-file "${{ env.FILE_PATH }}" --user "${{ env.API_USER }}:${{ secrets.BINTRAY_API_KEY }}" "https://api.bintray.com/content/${{ env.REPOSITORY_USER }}/${{ env.REPOSITORY }}/${{ env.PACKAGE }}/${{ env.VERSION }}/${{ env.UPLOAD_PATH }}/${{ env.FILE_PATH }};publish=${{ env.PUBLISH }}

      - name: after_deploy
        continue-on-error: true
        shell: pwsh
        run: |
            Set-Location -Path .\bootique-tool\target\bq-win.portable\bq-win.portable\
            choco apikey -k $env:choco_key -source https://push.chocolatey.org/
            choco push bq.portable.$env:APPVEYOR_REPO_TAG_NAME.nupkg -s https://push.chocolatey.org/